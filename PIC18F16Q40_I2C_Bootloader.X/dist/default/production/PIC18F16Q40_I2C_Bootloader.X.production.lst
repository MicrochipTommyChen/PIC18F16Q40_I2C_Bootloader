

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 01 17:36:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     6                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24                           	psect	pa_nodes0,global,class=CODE,delta=1
    25                           	dabs	1,0x1500,2,_bufferRAM
    26  0000                     
    27                           ; Version 2.32
    28                           ; Generated 10/02/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F16Q40 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	intcode
    64  000226  EF04 F003          	goto	1544	;# 
    65                           
    66                           	psect	intcodelo
    67  000222  EF0C F003          	goto	1560	;# 
    68  0000                     
    69                           ; 1 bytes @ 0xF
    70 ;;
    71 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    72 ;;
    73 ;; *************** function _main *****************
    74 ;; Defined at:
    75 ;;		line 134 in file "Bootloader.c"
    76 ;; Parameters:    Size  Location     Type
    77 ;;		None
    78 ;; Auto vars:     Size  Location     Type
    79 ;;		None
    80 ;; Return value:  Size  Location     Type
    81 ;;                  1    wreg      void 
    82 ;; Registers used:
    83 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    84 ;; Tracked objects:
    85 ;;		On entry : 0/0
    86 ;;		On exit  : 0/0
    87 ;;		Unchanged: 0/0
    88 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
    89 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
    90 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
    91 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
    92 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
    93 ;;Total ram usage:        0 bytes
    94 ;; Hardware stack levels required when called: 2
    95 ;; This function calls:
    96 ;;		_DELAY_milliseconds
    97 ;;		_I2C_Slave_Init
    98 ;;		_Initialize
    99 ;;		_do_i2c_tasks
   100 ;;		_flash_memory_read
   101 ;; This function is called by:
   102 ;;		Startup code after reset
   103 ;; This function uses a non-reentrant model
   104 ;;
   105                           
   106                           	psect	text0
   107  000308                     __ptext0:
   108                           	callstack 0
   109  0000                     _LATC1	set	9729
   110  0000                     _INTCON0bits	set	1238
   111  0000                     _LATA	set	1214
   112  0000                     _LATB	set	1215
   113  0000                     _LATC	set	1216
   114  0000                     _TRISA	set	1222
   115  0000                     _TRISB	set	1223
   116  0000                     _TRISC	set	1224
   117  0000                     _PIE7bits	set	1199
   118  0000                     _PIR7bits	set	1210
   119  0000                     _TBLPTRU	set	1272
   120  0000                     _TBLPTRH	set	1271
   121  0000                     _TBLPTRL	set	1270
   122  0000                     _TABLAT	set	1269
   123  0000                     _ANSELC	set	1040
   124  0000                     _ANSELB	set	1032
   125  0000                     _ANSELA	set	1024
   126  0000                     _WPUB	set	1033
   127  0000                     _WPUA	set	1025
   128  0000                     _WPUC	set	1041
   129  0000                     _ODCONA	set	1026
   130  0000                     _ODCONB	set	1034
   131  0000                     _ODCONC	set	1042
   132  0000                     _SLRCONA	set	1027
   133  0000                     _SLRCONB	set	1035
   134  0000                     _SLRCONC	set	1043
   135  0000                     _INLVLA	set	1028
   136  0000                     _INLVLB	set	1036
   137  0000                     _INLVLC	set	1044
   138  0000                     _I2C1SDAPPS	set	624
   139  0000                     _RB6PPS	set	527
   140  0000                     _RB4PPS	set	525
   141  0000                     _I2C1SCLPPS	set	625
   142  0000                     _I2C1CON0	set	660
   143  0000                     _I2C1CON1	set	661
   144  0000                     _I2C1CON2	set	662
   145  0000                     _I2C1CNTL	set	652
   146  0000                     _I2C1CNTH	set	653
   147  0000                     _I2C1ADR0	set	656
   148  0000                     _I2C1ADR2	set	658
   149  0000                     _I2C1ADR1	set	657
   150  0000                     _I2C1ADR3	set	659
   151  0000                     _I2C1PIEbits	set	667
   152  0000                     _I2C1ERRbits	set	663
   153  0000                     _I2C1PIR	set	666
   154  0000                     _I2C1CON0bits	set	660
   155  0000                     _I2C1STAT1bits	set	665
   156  0000                     _I2C1TXB	set	651
   157  0000                     _I2C1PIRbits	set	666
   158  0000                     _I2C1STAT0bits	set	664
   159  0000                     _I2C1ADB0	set	654
   160  0000                     _I2C1RXB	set	650
   161  0000                     _PMD0	set	99
   162  0000                     _PMD1	set	100
   163  0000                     _PMD2	set	101
   164  0000                     _PMD3	set	102
   165  0000                     _PMD4	set	103
   166  0000                     _PMD5	set	104
   167  0000                     _OSCCON1	set	173
   168  0000                     _OSCCON3	set	175
   169  0000                     _OSCEN	set	179
   170  0000                     _OSCFRQ	set	177
   171  0000                     _OSCTUNE	set	176
   172  0000                     _ACTCON	set	172
   173  0000                     _NVMCON1	set	65
   174  0000                     _NVMADRU	set	69
   175  0000                     _NVMADRL	set	67
   176  0000                     _NVMADRH	set	68
   177  0000                     _NVMDATL	set	70
   178  0000                     _NVMDATH	set	71
   179  0000                     _NVMCON1bits	set	65
   180  0000                     _NVMLOCK	set	66
   181  0000                     _NVMCON0bits	set	64
   182  000308                     _main:
   183                           	callstack 126
   184                           
   185                           ;Bootloader.c: 136:  Initialize();
   186                           
   187                           ;incstack = 0
   188  000308  ECCF  F001         	call	_Initialize	;wreg free
   189                           
   190                           ;Bootloader.c: 137:  I2C_Slave_Init();
   191  00030C  EC40  F001         	call	_I2C_Slave_Init	;wreg free
   192                           
   193                           ; BSR set to: 2
   194                           ;Bootloader.c: 139:     INTCON0bits.GIE = 0;
   195  000310  9ED6               	bcf	214,7,c	;volatile
   196                           
   197                           ; BSR set to: 2
   198                           ;Bootloader.c: 141:     DELAY_milliseconds(100);
   199  000312  6A02               	clrf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
   200  000314  0E64               	movlw	100
   201  000316  6E01               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
   202  000318  EC1E  F001         	call	_DELAY_milliseconds	;wreg free
   203                           
   204                           ;Bootloader.c: 144:     if(flash_memory_read (0xFFFE) == 0xFF55)
   205  00031C  6802               	setf	(flash_memory_read@address+1)^(0+1280),c
   206  00031E  0EFE               	movlw	254
   207  000320  6E01               	movwf	flash_memory_read@address^(0+1280),c
   208  000322  EC56  F001         	call	_flash_memory_read	;wreg free
   209  000326  0E55               	movlw	85
   210  000328  1801               	xorwf	?_flash_memory_read^(0+1280),w,c
   211  00032A  E104               	bnz	l1501
   212  00032C  2802               	incf	(?_flash_memory_read+1)^(0+1280),w,c
   213  00032E  E102               	bnz	l1501
   214  000330  EF00 F003          	goto	1536	;# 
   215  000334                     l1501:
   216                           
   217                           ;Bootloader.c: 152:   {;Bootloader.c: 153:    do_i2c_tasks();
   218  000334  EC0E  F002         	call	_do_i2c_tasks	;wreg free
   219  000338  D7FD               	goto	l1501
   220  00033A                     __end_of_main:
   221                           	callstack 0
   222                           
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226  00025E                     __pcinit:
   227                           	callstack 0
   228  00025E                     start_initialization:
   229                           	callstack 0
   230  00025E                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Clear objects allocated to BANK5 (128 bytes)
   234  00025E  EE01  F160         	lfsr	0,__pbssBANK5
   235  000262  0E80               	movlw	128
   236  000264                     clear_0:
   237  000264  6AEE               	clrf	postinc0,c
   238  000266  06E8               	decf	wreg,f,c
   239  000268  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to COMRAM (6 bytes)
   242  00026A  6A15               	clrf	(__pbssCOMRAM+5)& (0+255),c
   243  00026C  6A14               	clrf	(__pbssCOMRAM+4)& (0+255),c
   244  00026E  6A13               	clrf	(__pbssCOMRAM+3)& (0+255),c
   245  000270  6A12               	clrf	(__pbssCOMRAM+2)& (0+255),c
   246  000272  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
   247  000274  6A10               	clrf	__pbssCOMRAM& (0+255),c
   248  000276                     end_of_initialization:
   249                           	callstack 0
   250  000276                     __end_of__initialization:
   251                           	callstack 0
   252  000276  0E00               	movlw	low (__Lmediumconst shr (0+16))
   253  000278  6EF8               	movwf	tblptru,c
   254  00027A  0100               	movlb	0
   255  00027C  EF84  F001         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMRAM
   258  000510                     __pbssCOMRAM:
   259                           	callstack 0
   260  000510                     _flash_addr_pointer:
   261                           	callstack 0
   262  000510                     	ds	2
   263  000512                     _i2cSlaveState:
   264                           	callstack 0
   265  000512                     	ds	1
   266  000513                     _pksa_status:
   267                           	callstack 0
   268  000513                     	ds	1
   269  000514                     _pksa_index:
   270                           	callstack 0
   271  000514                     	ds	1
   272  000515                     _pksa_wd_address:
   273                           	callstack 0
   274  000515                     	ds	1
   275                           
   276                           	psect	bssBANK5
   277  000560                     __pbssBANK5:
   278                           	callstack 0
   279  000560                     _flash_buffer:
   280                           	callstack 0
   281  000560                     	ds	128
   282                           
   283                           	psect	cstackCOMRAM
   284  000501                     __pcstackCOMRAM:
   285                           	callstack 0
   286  000501                     ?_flash_memory_read:
   287                           	callstack 0
   288  000501                     __WriteData@data:
   289                           	callstack 0
   290  000501                     flash_memory_read@address:
   291                           	callstack 0
   292  000501                     flash_memory_write@address:
   293                           	callstack 0
   294  000501                     flash_memory_erase@address:
   295                           	callstack 0
   296  000501                     DELAY_milliseconds@milliseconds:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x0
   300  000501                     	ds	2
   301  000503                     ??_DELAY_milliseconds:
   302  000503                     ??_flash_memory_read:
   303  000503                     flash_memory_write@data:
   304                           	callstack 0
   305  000503                     flash_memory_erase@blockStartAddr:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2
   309  000503                     	ds	2
   310  000505                     ??_flash_memory_write:
   311  000505                     flash_memory_read@readWordL:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x4
   315  000505                     	ds	1
   316  000506                     flash_memory_read@readWordH:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x5
   320  000506                     	ds	1
   321  000507                     flash_memory_write@wdi:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x6
   325  000507                     	ds	1
   326  000508                     ??_do_i2c_tasks:
   327                           
   328                           ; 1 bytes @ 0x7
   329  000508                     	ds	2
   330  00050A                     do_i2c_tasks@i:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x9
   334  00050A                     	ds	2
   335  00050C                     do_i2c_tasks@dat:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xB
   339  00050C                     	ds	2
   340  00050E                     do_i2c_tasks@idx:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0xD
   344  00050E                     	ds	1
   345  00050F                     do_i2c_tasks@temp:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0xE
   349  00050F                     	ds	1
   350  000510                     
   351 ;; *************** function _do_i2c_tasks *****************
   352 ;; Defined at:
   353 ;;		line 99 in file "pksa.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  i               2    9[COMRAM] int 
   358 ;;  dat             2   11[COMRAM] unsigned int 
   359 ;;  temp            1   14[COMRAM] unsigned char 
   360 ;;  idx             1   13[COMRAM] unsigned char 
   361 ;; Return value:  Size  Location     Type
   362 ;;                  2   12[None  ] int 
   363 ;; Registers used:
   364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/2
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   371 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   374 ;;Total ram usage:        8 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 1
   377 ;; This function calls:
   378 ;;		__WriteData
   379 ;;		_flash_memory_erase
   380 ;;		_flash_memory_read
   381 ;;		_flash_memory_write
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text1
   388  00041C                     __ptext1:
   389                           	callstack 0
   390  00041C                     _do_i2c_tasks:
   391                           	callstack 126
   392                           
   393                           ;pksa.c: 102:   unsigned char temp,idx;;pksa.c: 104:         if(PIR7bits.I2C1IF == 1)
   394                           
   395                           ;incstack = 0
   396  00041C  A4BA               	btfss	186,2,c	;volatile
   397  00041E  0012               	return	
   398                           
   399                           ;pksa.c: 105:   {;pksa.c: 106:             if(I2C1PIRbits.PCIF)
   400  000420  0102               	movlb	2	; () banked
   401  000422  A59A               	btfss	154,2,b	;volatile
   402  000424  D007               	goto	l188
   403                           
   404                           ; BSR set to: 2
   405                           ;pksa.c: 107:             {;pksa.c: 109:                 I2C1PIR = 0;
   406  000426  6B9A               	clrf	154,b	;volatile
   407                           
   408                           ;pksa.c: 110:                 I2C1STAT1bits.CLRBF = 1;
   409  000428  8599               	bsf	153,2,b	;volatile
   410                           
   411                           ;pksa.c: 111:                 I2C1CNTL = 0x00;
   412  00042A  6B8C               	clrf	140,b	;volatile
   413                           
   414                           ;pksa.c: 112:                 I2C1CNTH = 0x00;
   415  00042C  6B8D               	clrf	141,b	;volatile
   416                           
   417                           ;pksa.c: 113:                 I2C1CON0bits.CSTR = 0;
   418  00042E  9994               	bcf	148,4,b	;volatile
   419                           
   420                           ;pksa.c: 115:     pksa_status = 0;
   421  000430  6A13               	clrf	_pksa_status^(0+1280),c
   422                           
   423                           ;pksa.c: 116:             }
   424  000432  D0D1               	goto	l189
   425  000434                     l188:
   426                           
   427                           ; BSR set to: 2
   428                           ;pksa.c: 118:             {;pksa.c: 120:                 if(I2C1PIRbits.ADRIF == 1)
   429  000434  A79A               	btfss	154,3,b	;volatile
   430  000436  D008               	goto	l190
   431                           
   432                           ; BSR set to: 2
   433                           ;pksa.c: 121:                 {;pksa.c: 122:                     if(I2C1STAT0bits.R)
   434  000438  A998               	btfss	152,4,b	;volatile
   435  00043A  D004               	goto	l1353
   436                           
   437                           ; BSR set to: 2
   438                           ;pksa.c: 123:                     {;pksa.c: 124:                         i2cSlaveState =
      +                           I2C_ADDR_TX;
   439  00043C  0E01               	movlw	1
   440  00043E                     L1:
   441  00043E  6E12               	movwf	_i2cSlaveState^(0+1280),c
   442                           
   443                           ; BSR set to: 2
   444                           ;pksa.c: 125:                         LATC1 ^= 1;
   445  000440  72C0               	btg	1216,1,c	;volatile
   446                           
   447                           ;pksa.c: 126:                     }
   448  000442  D0B8               	goto	l1481
   449  000444                     l1353:
   450                           
   451                           ; BSR set to: 2
   452                           ;pksa.c: 128:                     {;pksa.c: 129:                         i2cSlaveState =
      +                           I2C_ADDR_RX;
   453  000444  0E02               	movlw	2
   454  000446  D7FB               	goto	L1
   455  000448                     l190:
   456                           
   457                           ; BSR set to: 2
   458                           ;pksa.c: 135:                 {;pksa.c: 136:                     if(I2C1STAT0bits.R)
   459  000448  A998               	btfss	152,4,b	;volatile
   460  00044A  D002               	goto	l1361
   461                           
   462                           ; BSR set to: 2
   463                           ;pksa.c: 137:                     {;pksa.c: 138:                         i2cSlaveState =
      +                           I2C_DATA_TX;
   464  00044C  0E03               	movlw	3
   465  00044E  D7F7               	goto	L1
   466  000450                     l1361:
   467                           
   468                           ; BSR set to: 2
   469                           ;pksa.c: 142:                     {;pksa.c: 143:                         i2cSlaveState =
      +                           I2C_DATA_RX;
   470  000450  0E04               	movlw	4
   471  000452  D7F5               	goto	L1
   472  000454                     l197:
   473                           
   474                           ; BSR set to: 2
   475  000454  518E               	movf	142,w,b	;volatile
   476                           
   477                           ;pksa.c: 154:                         I2C1STAT1bits.CLRBF = 1;
   478  000456  8599               	bsf	153,2,b	;volatile
   479                           
   480                           ; BSR set to: 2
   481                           ;pksa.c: 155:                         pksa_status=1;
   482  000458  0E01               	movlw	1
   483  00045A  D00A               	goto	L2
   484  00045C                     l199:
   485                           
   486                           ; BSR set to: 2
   487                           ;pksa.c: 160:                         if(I2C1STAT1bits.RXBF)
   488  00045C  B199               	btfsc	153,0,b	;volatile
   489                           
   490                           ; BSR set to: 2
   491                           ;pksa.c: 161:                         {;pksa.c: 162:                             temp = 
      +                          I2C1RXB;
   492  00045E  0060 FA28  F50F    	movff	650,do_i2c_tasks@temp	;volatile
   493                           
   494                           ; BSR set to: 2
   495                           ;pksa.c: 165:                         if( pksa_status == 1 )
   496  000464  0413               	decf	_pksa_status^(0+1280),w,c
   497  000466  E106               	bnz	l1375
   498                           
   499                           ; BSR set to: 2
   500                           ;pksa.c: 166:                         {;pksa.c: 167:                             pksa_wd
      +                          _address = temp;
   501  000468  C50F  F515         	movff	do_i2c_tasks@temp,_pksa_wd_address
   502                           
   503                           ;pksa.c: 168:                             pksa_index=0;
   504  00046C  6A14               	clrf	_pksa_index^(0+1280),c
   505                           
   506                           ; BSR set to: 2
   507                           ;pksa.c: 169:                             pksa_status = 2;
   508  00046E  0E02               	movlw	2
   509  000470                     L2:
   510  000470  6E13               	movwf	_pksa_status^(0+1280),c
   511                           
   512                           ;pksa.c: 170:                         }
   513  000472  D0B1               	goto	l189
   514  000474                     l1375:
   515                           
   516                           ; BSR set to: 2
   517  000474  0E02               	movlw	2
   518  000476  1813               	xorwf	_pksa_status^(0+1280),w,c
   519  000478  E001 D0AD          	bnz	l189
   520                           
   521                           ; BSR set to: 2
   522                           ;pksa.c: 172:                         {;pksa.c: 173:                             if ( pk
      +                          sa_wd_address == 0x01)
   523  00047C  0415               	decf	_pksa_wd_address^(0+1280),w,c
   524  00047E  E10A               	bnz	l1389
   525                           
   526                           ; BSR set to: 2
   527                           ;pksa.c: 174:                             {;pksa.c: 175:                                
      +                           if (pksa_index == 0)
   528  000480  5014               	movf	_pksa_index^(0+1280),w,c
   529  000482  E104               	bnz	l1385
   530                           
   531                           ; BSR set to: 2
   532                           ;pksa.c: 176:                                 {;pksa.c: 177:                            
      +                                   flash_addr_pointer.bytes.byte_H= temp;
   533  000484  C50F  F511         	movff	do_i2c_tasks@temp,_flash_addr_pointer+1
   534                           
   535                           ; BSR set to: 2
   536                           ;pksa.c: 178:                                     pksa_index++;
   537  000488  2A14               	incf	_pksa_index^(0+1280),f,c
   538                           
   539                           ;pksa.c: 179:                                 }
   540  00048A  D004               	goto	l1389
   541  00048C                     l1385:
   542                           
   543                           ; BSR set to: 2
   544  00048C  0414               	decf	_pksa_index^(0+1280),w,c
   545  00048E  E102               	bnz	l1389
   546                           
   547                           ; BSR set to: 2
   548                           ;pksa.c: 181:                                 {;pksa.c: 182:                            
      +                                    flash_addr_pointer.bytes.byte_L= temp;
   549  000490  C50F  F510         	movff	do_i2c_tasks@temp,_flash_addr_pointer
   550  000494                     l1389:
   551                           
   552                           ; BSR set to: 2
   553                           ;pksa.c: 186:                             if ( pksa_wd_address == 0x02 )
   554  000494  0E02               	movlw	2
   555  000496  1815               	xorwf	_pksa_wd_address^(0+1280),w,c
   556  000498  E001 D09D          	bnz	l189
   557                           
   558                           ; BSR set to: 2
   559                           ;pksa.c: 187:                             {;pksa.c: 188:                                
      +                           flash_buffer[pksa_index]=temp;
   560  00049C  D8A3               	call	PL2	;call to abstracted procedure
   561  00049E  0061  F43C  F4DF   	movff	do_i2c_tasks@temp,indf2
   562                           
   563                           ; BSR set to: 2
   564                           ;pksa.c: 189:                                 pksa_index++;
   565  0004A4  2A14               	incf	_pksa_index^(0+1280),f,c
   566                           
   567                           ; BSR set to: 2
   568                           ;pksa.c: 190:                                 if (pksa_index == 128)
   569  0004A6  0E80               	movlw	128
   570  0004A8  1814               	xorwf	_pksa_index^(0+1280),w,c
   571  0004AA  E001 D094          	bnz	l189
   572  0004AE                     u460:
   573                           
   574                           ; BSR set to: 2
   575                           ;pksa.c: 191:                                     pksa_index--;
   576  0004AE  0614               	decf	_pksa_index^(0+1280),f,c
   577                           
   578                           ; BSR set to: 2
   579                           ;pksa.c: 195:                     break;
   580  0004B0  D092               	goto	l189
   581  0004B2                     l210:
   582                           
   583                           ; BSR set to: 2
   584  0004B2  518E               	movf	142,w,b	;volatile
   585                           
   586                           ;pksa.c: 199:                         I2C1STAT1bits.CLRBF = 1;
   587  0004B4  8599               	bsf	153,2,b	;volatile
   588                           
   589                           ; BSR set to: 2
   590                           ;pksa.c: 200:                             if (pksa_wd_address == 0x01)
   591  0004B6  0415               	decf	_pksa_wd_address^(0+1280),w,c
   592  0004B8  E103               	bnz	l1403
   593                           
   594                           ; BSR set to: 2
   595                           ;pksa.c: 201:                             {;pksa.c: 203:                                
      +                           _WriteData (flash_addr_pointer.bytes.byte_H);
   596  0004BA  5011               	movf	(_flash_addr_pointer+1)^(0+1280),w,c
   597  0004BC  EC15  F001         	call	__WriteData
   598  0004C0                     l1403:
   599                           
   600                           ; BSR set to: 2
   601                           ;pksa.c: 205:                             if (pksa_wd_address == 0x03)
   602  0004C0  0E03               	movlw	3
   603  0004C2  1815               	xorwf	_pksa_wd_address^(0+1280),w,c
   604  0004C4  E133               	bnz	l1433
   605                           
   606                           ; BSR set to: 2
   607                           ;pksa.c: 206:                             {;pksa.c: 207:                                
      +                           if (pksa_index == 0)
   608  0004C6  5014               	movf	_pksa_index^(0+1280),w,c
   609  0004C8  E131               	bnz	l1433
   610                           
   611                           ; BSR set to: 2
   612                           ;pksa.c: 208:                                 {;pksa.c: 209:                            
      +                                   LATC1 = 1;
   613  0004CA  82C0               	bsf	1216,1,c	;volatile
   614                           
   615                           ;pksa.c: 211:                                     for (idx = 0; idx <128; idx+=2)
   616  0004CC  6A0E               	clrf	do_i2c_tasks@idx^(0+1280),c
   617  0004CE                     l1413:
   618                           
   619                           ;pksa.c: 212:                                     {;pksa.c: 213:                        
      +                                           dat = flash_memory_read (flash_addr_pointer.word.address);
   620  0004CE  C510  F501         	movff	_flash_addr_pointer,flash_memory_read@address
   621  0004D2  C511  F502         	movff	_flash_addr_pointer+1,flash_memory_read@address+1
   622  0004D6  EC56  F001         	call	_flash_memory_read	;wreg free
   623  0004DA  C501  F50C         	movff	?_flash_memory_read,do_i2c_tasks@dat
   624  0004DE  C502  F50D         	movff	?_flash_memory_read+1,do_i2c_tasks@dat+1
   625                           
   626                           ;pksa.c: 214:                                         flash_buffer[idx ] = dat>>8;
   627  0004E2  0E60               	movlw	low _flash_buffer
   628  0004E4  240E               	addwf	do_i2c_tasks@idx^(0+1280),w,c
   629  0004E6  6ED9               	movwf	fsr2l,c
   630  0004E8  6ADA               	clrf	fsr2h,c
   631  0004EA  0E05               	movlw	high _flash_buffer
   632  0004EC  22DA               	addwfc	fsr2h,f,c
   633  0004EE  0061  F434  F4DF   	movff	do_i2c_tasks@dat+1,indf2
   634                           
   635                           ;pksa.c: 215:                                         flash_buffer[idx+1] = dat & 0xFF;
   636  0004F4  0E61               	movlw	low (_flash_buffer+1)
   637  0004F6  240E               	addwf	do_i2c_tasks@idx^(0+1280),w,c
   638  0004F8  6ED9               	movwf	fsr2l,c
   639  0004FA  6ADA               	clrf	fsr2h,c
   640  0004FC  0E05               	movlw	high (_flash_buffer+1)
   641  0004FE  22DA               	addwfc	fsr2h,f,c
   642  000500  0061  F430  F4DF   	movff	do_i2c_tasks@dat,indf2
   643                           
   644                           ;pksa.c: 216:                                         flash_addr_pointer.word.address +=
      +                           2;
   645  000506  0E02               	movlw	2
   646  000508  2610               	addwf	_flash_addr_pointer^(0+1280),f,c
   647  00050A  0E00               	movlw	0
   648  00050C  2211               	addwfc	(_flash_addr_pointer+1)^(0+1280),f,c
   649                           
   650                           ;pksa.c: 217:                                     }
   651  00050E  0E02               	movlw	2
   652  000510  260E               	addwf	do_i2c_tasks@idx^(0+1280),f,c
   653  000512  0E7F               	movlw	127
   654  000514  640E               	cpfsgt	do_i2c_tasks@idx^(0+1280),c
   655  000516  D7DB               	goto	l1413
   656                           
   657                           ;pksa.c: 218:                                     LATC1 = 0;
   658  000518  92C0               	bcf	1216,1,c	;volatile
   659                           
   660                           ;pksa.c: 220:                                     _WriteData(flash_buffer[pksa_index]);
   661  00051A  D864               	call	PL2	;call to abstracted procedure
   662  00051C  50DF               	movf	indf2,w,c
   663  00051E  EC15  F001         	call	__WriteData
   664                           
   665                           ; BSR set to: 2
   666                           ;pksa.c: 221:                                     pksa_index++;
   667  000522  2A14               	incf	_pksa_index^(0+1280),f,c
   668                           
   669                           ; BSR set to: 2
   670                           ;pksa.c: 222:                                     if (pksa_index == 128)
   671  000524  0E80               	movlw	128
   672  000526  1814               	xorwf	_pksa_index^(0+1280),w,c
   673  000528  E101               	bnz	l1433
   674                           
   675                           ; BSR set to: 2
   676                           ;pksa.c: 223:                                         pksa_index--;
   677  00052A  0614               	decf	_pksa_index^(0+1280),f,c
   678  00052C                     l1433:
   679                           
   680                           ; BSR set to: 2
   681                           ;pksa.c: 226:                             if (pksa_wd_address == 0x04)
   682  00052C  0E04               	movlw	4
   683  00052E  1815               	xorwf	_pksa_wd_address^(0+1280),w,c
   684  000530  E10A               	bnz	l1441
   685                           
   686                           ; BSR set to: 2
   687                           ;pksa.c: 227:                             {;pksa.c: 229:                                
      +                           flash_memory_erase (flash_addr_pointer.word.address);
   688  000532  C510  F501         	movff	_flash_addr_pointer,flash_memory_erase@address
   689  000536  C511  F502         	movff	_flash_addr_pointer+1,flash_memory_erase@address+1
   690  00053A  EC6C  F001         	call	_flash_memory_erase	;wreg free
   691                           
   692                           ; BSR set to: 0
   693                           ;pksa.c: 230:                                 flash_addr_pointer.word.address +=256;
   694  00053E  2A11               	incf	(_flash_addr_pointer+1)^(0+1280),f,c
   695                           
   696                           ; BSR set to: 0
   697                           ;pksa.c: 231:                                 _WriteData(0x00);
   698  000540  0E00               	movlw	0
   699  000542  EC15  F001         	call	__WriteData
   700  000546                     l1441:
   701                           
   702                           ; BSR set to: 2
   703                           ;pksa.c: 233:                             if (pksa_wd_address == 0x05)
   704  000546  0E05               	movlw	5
   705  000548  1815               	xorwf	_pksa_wd_address^(0+1280),w,c
   706  00054A  E110               	bnz	l1449
   707                           
   708                           ; BSR set to: 2
   709                           ;pksa.c: 234:                             {;pksa.c: 238:                                
      +                           flash_memory_write (flash_addr_pointer.word.address, flash_buffer );
   710  00054C  C510  F501         	movff	_flash_addr_pointer,flash_memory_write@address
   711  000550  C511  F502         	movff	_flash_addr_pointer+1,flash_memory_write@address+1
   712  000554  0E60               	movlw	low _flash_buffer
   713  000556  6E03               	movwf	flash_memory_write@data^(0+1280),c
   714  000558  0E05               	movlw	high _flash_buffer
   715  00055A  6E04               	movwf	(flash_memory_write@data+1)^(0+1280),c
   716  00055C  EC9D  F001         	call	_flash_memory_write	;wreg free
   717                           
   718                           ; BSR set to: 0
   719                           ;pksa.c: 239:                                 flash_addr_pointer.word.address +=128;
   720  000560  0E80               	movlw	128
   721  000562  2610               	addwf	_flash_addr_pointer^(0+1280),f,c
   722  000564  0E00               	movlw	0
   723  000566  2211               	addwfc	(_flash_addr_pointer+1)^(0+1280),f,c
   724                           
   725                           ; BSR set to: 0
   726                           ;pksa.c: 240:                                 _WriteData(0x00);
   727  000568  EC15  F001         	call	__WriteData
   728  00056C                     l1449:
   729                           
   730                           ; BSR set to: 2
   731                           ;pksa.c: 243:                             if (pksa_wd_address == 0x06)
   732  00056C  0E06               	movlw	6
   733  00056E  1815               	xorwf	_pksa_wd_address^(0+1280),w,c
   734  000570  E132               	bnz	l189
   735                           
   736                           ; BSR set to: 2
   737                           ;pksa.c: 244:                             {;pksa.c: 246:                                
      +                           _WriteData(0x00);
   738  000572  0E00               	movlw	0
   739  000574  EC15  F001         	call	__WriteData
   740                           
   741                           ; BSR set to: 2
   742                           ;pksa.c: 248:                                 LATC1 ^= 1;
   743  000578  72C0               	btg	1216,1,c	;volatile
   744                           
   745                           ; BSR set to: 2
   746                           ;pksa.c: 249:                                 for (int i = 0; i < 0xFFFF; i++ )
   747  00057A  6A0A               	clrf	do_i2c_tasks@i^(0+1280),c
   748  00057C  6A0B               	clrf	(do_i2c_tasks@i+1)^(0+1280),c
   749  00057E                     l220:
   750                           
   751                           ;pksa.c: 250:                                 {;pksa.c: 251:                            
      +                                   __nop();
   752  00057E  F000               	nop	
   753                           
   754                           ;pksa.c: 252:                                 }
   755  000580  4A0A               	infsnz	do_i2c_tasks@i^(0+1280),f,c
   756  000582  2A0B               	incf	(do_i2c_tasks@i+1)^(0+1280),f,c
   757  000584  280A               	incf	do_i2c_tasks@i^(0+1280),w,c
   758  000586  E1FB               	bnz	l220
   759  000588  280B               	incf	(do_i2c_tasks@i+1)^(0+1280),w,c
   760  00058A  E1F9               	bnz	l220
   761  00058C  00FF               	reset		;# 
   762  00058E  D023               	goto	l189
   763  000590                     l1465:
   764                           
   765                           ; BSR set to: 2
   766                           ;pksa.c: 262:                             if (pksa_wd_address == 0x01)
   767  000590  0415               	decf	_pksa_wd_address^(0+1280),w,c
   768  000592  E103               	bnz	l1469
   769                           
   770                           ; BSR set to: 2
   771                           ;pksa.c: 263:                             {;pksa.c: 264:                                
      +                           _WriteData (flash_addr_pointer.bytes.byte_L);
   772  000594  5010               	movf	_flash_addr_pointer^(0+1280),w,c
   773  000596  EC15  F001         	call	__WriteData
   774  00059A                     l1469:
   775                           
   776                           ; BSR set to: 2
   777                           ;pksa.c: 266:                             if (pksa_wd_address == 0x03)
   778  00059A  0E03               	movlw	3
   779  00059C  1815               	xorwf	_pksa_wd_address^(0+1280),w,c
   780  00059E  E11B               	bnz	l189
   781                           
   782                           ; BSR set to: 2
   783                           ;pksa.c: 267:                             {;pksa.c: 268:                                
      +                           _WriteData(flash_buffer[pksa_index]);
   784  0005A0  D821               	call	PL2	;call to abstracted procedure
   785  0005A2  50DF               	movf	indf2,w,c
   786  0005A4  EC15  F001         	call	__WriteData
   787                           
   788                           ; BSR set to: 2
   789                           ;pksa.c: 269:                                 pksa_index++;
   790  0005A8  2A14               	incf	_pksa_index^(0+1280),f,c
   791                           
   792                           ; BSR set to: 2
   793                           ;pksa.c: 270:                                 if (pksa_index == 128)
   794  0005AA  0E80               	movlw	128
   795  0005AC  1814               	xorwf	_pksa_index^(0+1280),w,c
   796  0005AE  E101 D77E          	bz	u460
   797  0005B2  D011               	goto	l189
   798  0005B4                     l1481:
   799                           
   800                           ; BSR set to: 2
   801  0005B4  5012               	movf	_i2cSlaveState^(0+1280),w,c
   802  0005B6  6E08               	movwf	??_do_i2c_tasks^(0+1280),c
   803  0005B8  6A09               	clrf	(??_do_i2c_tasks+1)^(0+1280),c
   804                           
   805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   806                           ; Switch size 1, requested type "space"
   807                           ; Number of cases is 1, Range of values is 0 to 0
   808                           ; switch strategies available:
   809                           ; Name         Instructions Cycles
   810                           ; simple_byte            4     3 (average)
   811                           ;	Chosen strategy is simple_byte
   812  0005BA  5009               	movf	(??_do_i2c_tasks+1)^(0+1280),w,c
   813  0005BC  E10C               	bnz	l189
   814                           
   815                           ; BSR set to: 2
   816                           ; Switch size 1, requested type "space"
   817                           ; Number of cases is 4, Range of values is 1 to 4
   818                           ; switch strategies available:
   819                           ; Name         Instructions Cycles
   820                           ; simple_byte           13     7 (average)
   821                           ;	Chosen strategy is simple_byte
   822  0005BE  5008               	movf	??_do_i2c_tasks^(0+1280),w,c
   823  0005C0  0A01               	xorlw	1	; case 1
   824  0005C2  E101 D776          	bz	l210
   825  0005C6  0A03               	xorlw	3	; case 2
   826  0005C8  E101 D744          	bz	l197
   827  0005CC  0A01               	xorlw	1	; case 3
   828  0005CE  E0E0               	bz	l1465
   829  0005D0  0A07               	xorlw	7	; case 4
   830  0005D2  E101 D743          	bz	l199
   831  0005D6                     l189:
   832                           
   833                           ;pksa.c: 276:             I2C1PIR = 0;
   834  0005D6  0102               	movlb	2	; () banked
   835  0005D8  6B9A               	clrf	154,b	;volatile
   836                           
   837                           ;pksa.c: 277:             PIR7bits.I2C1IF = 0;
   838                           
   839                           ;pksa.c: 278:             PIR7bits.I2C1EIF = 0;
   840                           
   841                           ;pksa.c: 279:             PIR7bits.I2C1RXIF = 0;
   842                           
   843                           ;pksa.c: 280:             PIR7bits.I2C1TXIF = 0;
   844  0005DA  D80B               	call	PL6	;call to abstracted procedure
   845                           
   846                           ;pksa.c: 281:             I2C1ERRbits.NACK1IF = 0;
   847  0005DC  9997               	bcf	151,4,b	;volatile
   848                           
   849                           ;pksa.c: 282:             I2C1STAT1bits.CLRBF = 1;
   850  0005DE  8599               	bsf	153,2,b	;volatile
   851                           
   852                           ;pksa.c: 283:             I2C1CON0bits.CSTR = 0;
   853  0005E0  9994               	bcf	148,4,b	;volatile
   854  0005E2  0012               	return		;funcret
   855  0005E4                     __end_of_do_i2c_tasks:
   856                           	callstack 0
   857  0005E4                     PL2:
   858                           	callstack 126
   859  0005E4  0E60               	movlw	low _flash_buffer
   860  0005E6  2414               	addwf	_pksa_index^(0+1280),w,c
   861  0005E8  6ED9               	movwf	fsr2l,c
   862  0005EA  6ADA               	clrf	fsr2h,c
   863  0005EC  0E05               	movlw	high _flash_buffer
   864  0005EE  22DA               	addwfc	fsr2h,f,c
   865  0005F0  0012               	return	
   866  0005F2                     __end_ofPL2:
   867                           	callstack 0
   868  0005F2                     PL6:
   869                           	callstack 127
   870  0005F2  94BA               	bcf	186,2,c	;volatile
   871  0005F4  96BA               	bcf	186,3,c	;volatile
   872  0005F6  90BA               	bcf	186,0,c	;volatile
   873  0005F8  92BA               	bcf	186,1,c	;volatile
   874  0005FA  0012               	return	
   875  0005FC                     __end_ofPL6:
   876                           	callstack 0
   877                           
   878 ;; *************** function _flash_memory_write *****************
   879 ;; Defined at:
   880 ;;		line 96 in file "flash_routines.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  address         2    0[COMRAM] unsigned int 
   883 ;;  data            2    2[COMRAM] PTR unsigned char 
   884 ;;		 -> flash_buffer(128), 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  wdi             1    6[COMRAM] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   891 ;; Tracked objects:
   892 ;;		On entry : 3F/2
   893 ;;		On exit  : 3F/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   899 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   900 ;;Total ram usage:        7 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_do_i2c_tasks
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text2
   910  00033A                     __ptext2:
   911                           	callstack 0
   912  00033A                     _flash_memory_write:
   913                           	callstack 126
   914                           
   915                           ; BSR set to: 2
   916                           ;flash_routines.c: 96: void flash_memory_write (unsigned int address, unsigned char *dat
      +                          a );flash_routines.c: 97: {;flash_routines.c: 99:   unsigned char wdi;;flash_routines.c:
      +                           101:   NVMCON1 = 0;
   917                           
   918                           ;incstack = 0
   919  00033A  0100               	movlb	0	; () banked
   920  00033C  6B41               	clrf	65,b	;volsfr
   921                           
   922                           ;flash_routines.c: 104:         NVMADRU = 0x00;
   923  00033E  6B45               	clrf	69,b	;volatile
   924                           
   925                           ;flash_routines.c: 105:         NVMADRL=(address & 0x00FF);
   926  000340  0061  F404  F043   	movff	flash_memory_write@address,67	;volatile
   927                           
   928                           ;flash_routines.c: 106:   NVMADRH=((address & 0xFF00)>>8);
   929  000346  0061  F408  F044   	movff	flash_memory_write@address+1,68	;volatile
   930                           
   931                           ;flash_routines.c: 110:         for (wdi=0;wdi<=126;wdi+=2)
   932  00034C  6A07               	clrf	flash_memory_write@wdi^(0+1280),c
   933  00034E                     l1313:
   934                           
   935                           ; BSR set to: 0
   936                           ;flash_routines.c: 113:   {;flash_routines.c: 118:    NVMDATL = data[wdi];
   937  00034E  5007               	movf	flash_memory_write@wdi^(0+1280),w,c
   938  000350  2403               	addwf	flash_memory_write@data^(0+1280),w,c
   939  000352  6ED9               	movwf	fsr2l,c
   940  000354  0E00               	movlw	0
   941  000356  2004               	addwfc	(flash_memory_write@data+1)^(0+1280),w,c
   942  000358  6EDA               	movwf	fsr2h,c
   943  00035A  50DF               	movf	indf2,w,c
   944  00035C  6F46               	movwf	70,b	;volatile
   945                           
   946                           ;flash_routines.c: 119:    NVMDATH = data[wdi+1];
   947  00035E  5007               	movf	flash_memory_write@wdi^(0+1280),w,c
   948  000360  2403               	addwf	flash_memory_write@data^(0+1280),w,c
   949  000362  6E05               	movwf	??_flash_memory_write^(0+1280),c
   950  000364  0E00               	movlw	0
   951  000366  2004               	addwfc	(flash_memory_write@data+1)^(0+1280),w,c
   952  000368  6E06               	movwf	(??_flash_memory_write+1)^(0+1280),c
   953  00036A  2805               	incf	??_flash_memory_write^(0+1280),w,c
   954  00036C  6ED9               	movwf	fsr2l,c
   955  00036E  0E00               	movlw	0
   956  000370  2006               	addwfc	(??_flash_memory_write+1)^(0+1280),w,c
   957  000372  6EDA               	movwf	fsr2h,c
   958  000374  50DF               	movf	indf2,w,c
   959  000376  6F47               	movwf	71,b	;volatile
   960                           
   961                           ; BSR set to: 0
   962                           ;flash_routines.c: 126:             NVMCON1bits.NVMCMD = 0b100;
   963  000378  5141               	movf	65,w,b	;volsfr
   964  00037A  0BF8               	andlw	-8
   965  00037C  0904               	iorlw	4
   966  00037E  6F41               	movwf	65,b	;volsfr
   967                           
   968                           ; BSR set to: 0
   969                           ;flash_routines.c: 130:             NVMLOCK = 0x55;
   970                           
   971                           ; BSR set to: 0
   972                           ;flash_routines.c: 131:             NVMLOCK = 0xAA;
   973                           
   974                           ; BSR set to: 0
   975                           ;flash_routines.c: 134:             NVMCON0bits.GO = 1;
   976  000380  EC7E  F001         	call	PL4	;call to abstracted procedure
   977                           
   978                           ; BSR set to: 0
   979                           ;flash_routines.c: 143:             __nop();
   980  000384  F000               	nop	
   981                           
   982                           ;flash_routines.c: 144:             __nop();
   983  000386  F000               	nop	
   984                           
   985                           ;flash_routines.c: 149:             NVMCON1bits.CMD = 0x00;
   986  000388  0EF8               	movlw	-8
   987  00038A  0100               	movlb	0	; () banked
   988  00038C  1741               	andwf	65,f,b	;volsfr
   989                           
   990                           ; BSR set to: 0
   991                           ;flash_routines.c: 150:   }
   992  00038E  0E02               	movlw	2
   993  000390  2607               	addwf	flash_memory_write@wdi^(0+1280),f,c
   994                           
   995                           ; BSR set to: 0
   996  000392  0E7E               	movlw	126
   997  000394  6407               	cpfsgt	flash_memory_write@wdi^(0+1280),c
   998  000396  D7DB               	goto	l1313
   999                           
  1000                           ; BSR set to: 0
  1001                           ;flash_routines.c: 175:         NVMCON1bits.CMD = 0x00;
  1002  000398  0EF8               	movlw	-8
  1003  00039A  1741               	andwf	65,f,b	;volsfr
  1004                           
  1005                           ; BSR set to: 0
  1006  00039C  0CF8               	retlw	248	;funcret
  1007  00039E                     __end_of_flash_memory_write:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _flash_memory_read *****************
  1011 ;; Defined at:
  1012 ;;		line 52 in file "flash_routines.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  address         2    0[COMRAM] unsigned int 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  readWordH       1    5[COMRAM] unsigned char 
  1017 ;;  readWordL       1    4[COMRAM] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  2    0[COMRAM] unsigned int 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/2
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1031 ;;Total ram usage:        6 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;;		_do_i2c_tasks
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text3
  1042  0002AC                     __ptext3:
  1043                           	callstack 0
  1044  0002AC                     _flash_memory_read:
  1045                           	callstack 127
  1046                           
  1047                           ;flash_routines.c: 52: unsigned int flash_memory_read (unsigned int address);flash_routi
      +                          nes.c: 53: {;flash_routines.c: 63:     uint8_t readWordL, readWordH;;flash_routines.c: 6
      +                          6:     TBLPTRU = (uint8_t) 0x00;
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;incstack = 0
  1051  0002AC  6AF8               	clrf	248,c	;volatile
  1052                           
  1053                           ;flash_routines.c: 67:     TBLPTRH = (uint8_t) ((address & 0x0000FF00) >> 8);
  1054  0002AE  0061  F408  F4F7   	movff	flash_memory_read@address+1,tblptrh	;volatile
  1055                           
  1056                           ;flash_routines.c: 68:     TBLPTRL = (uint8_t) (address & 0x000000FF);
  1057  0002B4  0061  F404  F4F6   	movff	flash_memory_read@address,tblptrl	;volatile
  1058  0002BA  0009               	tblrd		*+	;# 
  1059                           
  1060                           ;flash_routines.c: 73:     readWordL = TABLAT;
  1061  0002BC  0061 F3D4  F505    	movff	tablat,flash_memory_read@readWordL	;volatile
  1062  0002C2  0008               	tblrd		*	;# 
  1063                           
  1064                           ;flash_routines.c: 80:     readWordH = TABLAT;
  1065  0002C4  0061 F3D4  F506    	movff	tablat,flash_memory_read@readWordH	;volatile
  1066                           
  1067                           ;flash_routines.c: 85:     return (((uint16_t) readWordH << 8) | (readWordL));
  1068  0002CA  5006               	movf	flash_memory_read@readWordH^(0+1280),w,c
  1069  0002CC  6E03               	movwf	??_flash_memory_read^(0+1280),c
  1070  0002CE  5005               	movf	flash_memory_read@readWordL^(0+1280),w,c
  1071  0002D0  6E01               	movwf	?_flash_memory_read^(0+1280),c
  1072  0002D2  C503  F502         	movff	??_flash_memory_read,?_flash_memory_read+1
  1073  0002D6  0012               	return		;funcret
  1074  0002D8                     __end_of_flash_memory_read:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _flash_memory_erase *****************
  1078 ;; Defined at:
  1079 ;;		line 195 in file "flash_routines.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  address         2    0[COMRAM] unsigned int 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  blockStartAd    2    2[COMRAM] unsigned short 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0
  1088 ;; Tracked objects:
  1089 ;;		On entry : 3F/2
  1090 ;;		On exit  : 3F/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1097 ;;Total ram usage:        4 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_do_i2c_tasks
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text4
  1107  0002D8                     __ptext4:
  1108                           	callstack 0
  1109  0002D8                     _flash_memory_erase:
  1110                           	callstack 126
  1111                           
  1112                           ; BSR set to: 2
  1113                           ;flash_routines.c: 195: void flash_memory_erase (unsigned int address);flash_routines.c:
      +                           196: {;flash_routines.c: 214:     uint16_t blockStartAddr = (uint16_t) (address & (0xFF
      +                          FF ^ ((128 * 2) - 1)));
  1114                           
  1115                           ;incstack = 0
  1116  0002D8  6A03               	clrf	flash_memory_erase@blockStartAddr^(0+1280),c
  1117  0002DA  5002               	movf	(flash_memory_erase@address+1)^(0+1280),w,c
  1118  0002DC  6E04               	movwf	(flash_memory_erase@blockStartAddr+1)^(0+1280),c
  1119                           
  1120                           ; BSR set to: 2
  1121                           ;flash_routines.c: 219:     NVMADRU = 0x00;
  1122  0002DE  0100               	movlb	0	; () banked
  1123  0002E0  6B45               	clrf	69,b	;volatile
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;flash_routines.c: 220:     NVMADRH = (uint8_t) ((blockStartAddr & 0x0000FF00) >> 8);
  1127  0002E2  0061  F410  F044   	movff	flash_memory_erase@blockStartAddr+1,68	;volatile
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;flash_routines.c: 223:     NVMCON1bits.NVMCMD = 0b110;
  1131  0002E8  5141               	movf	65,w,b	;volsfr
  1132  0002EA  0BF8               	andlw	-8
  1133  0002EC  0906               	iorlw	6
  1134  0002EE  6F41               	movwf	65,b	;volsfr
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;flash_routines.c: 229:     NVMLOCK = 0x55;
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;flash_routines.c: 230:     NVMLOCK = 0xAA;
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;flash_routines.c: 233:     NVMCON0bits.GO = 1;
  1144  0002F0  D805               	call	PL4	;call to abstracted procedure
  1145  0002F2                     l267:
  1146                           
  1147                           ; BSR set to: 0
  1148  0002F2  B140               	btfsc	64,0,b	;volatile
  1149  0002F4  D7FE               	goto	l267
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;flash_routines.c: 240:     NVMCON1bits.NVMCMD = 0b000;
  1153  0002F6  0EF8               	movlw	-8
  1154  0002F8  1741               	andwf	65,f,b	;volsfr
  1155                           
  1156                           ; BSR set to: 0
  1157  0002FA  0CF8               	retlw	248	;funcret
  1158  0002FC                     __end_of_flash_memory_erase:
  1159                           	callstack 0
  1160  0002FC                     PL4:
  1161                           	callstack 126
  1162  0002FC  0E55               	movlw	85
  1163  0002FE  6F42               	movwf	66,b	;volatile
  1164  000300  0EAA               	movlw	170
  1165  000302  6F42               	movwf	66,b	;volatile
  1166  000304  8140               	bsf	64,0,b	;volatile
  1167  000306  0CAA               	retlw	170
  1168  000308                     __end_ofPL4:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function __WriteData *****************
  1172 ;; Defined at:
  1173 ;;		line 93 in file "pksa.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  data            1    wreg     unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  data            1    0[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/2
  1184 ;;		On exit  : 3F/2
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1191 ;;Total ram usage:        1 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_do_i2c_tasks
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text5
  1201  00022A                     __ptext5:
  1202                           	callstack 0
  1203  00022A                     __WriteData:
  1204                           	callstack 126
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;incstack = 0
  1208                           ;__WriteData@data stored from wreg
  1209  00022A  6E01               	movwf	__WriteData@data^(0+1280),c
  1210  00022C                     
  1211                           ;pksa.c: 93: void _WriteData(unsigned char data);pksa.c: 94: {;pksa.c: 95:     while(I2C
      +                          1STAT1bits.TXBE != 1);
  1212  00022C  0102               	movlb	2	; () banked
  1213  00022E  AB99               	btfss	153,5,b	;volatile
  1214  000230  D7FD               	goto	l969
  1215                           
  1216                           ; BSR set to: 2
  1217                           ;pksa.c: 96:     I2C1TXB = data;
  1218  000232  0061  F404  F28B   	movff	__WriteData@data,651	;volatile
  1219                           
  1220                           ; BSR set to: 2
  1221                           ;pksa.c: 97:  I2C1CON0bits.CSTR = 0;
  1222  000238  9994               	bcf	148,4,b	;volatile
  1223                           
  1224                           ; BSR set to: 2
  1225  00023A  0012               	return		;funcret
  1226  00023C                     __end_of__WriteData:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _Initialize *****************
  1230 ;; Defined at:
  1231 ;;		line 158 in file "Bootloader.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 3F/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text6
  1259  00039E                     __ptext6:
  1260                           	callstack 0
  1261  00039E                     _Initialize:
  1262                           	callstack 127
  1263                           
  1264                           ;Bootloader.c: 162:     PMD0 = 0x00;
  1265                           
  1266                           ; BSR set to: 2
  1267                           ;incstack = 0
  1268  00039E  0100               	movlb	0	; () banked
  1269  0003A0  6B63               	clrf	99,b	;volatile
  1270                           
  1271                           ;Bootloader.c: 164:     PMD1 = 0x00;
  1272  0003A2  6B64               	clrf	100,b	;volatile
  1273                           
  1274                           ;Bootloader.c: 166:     PMD2 = 0x00;
  1275  0003A4  6B65               	clrf	101,b	;volatile
  1276                           
  1277                           ;Bootloader.c: 168:     PMD3 = 0x00;
  1278  0003A6  6B66               	clrf	102,b	;volatile
  1279                           
  1280                           ;Bootloader.c: 170:     PMD4 = 0x00;
  1281  0003A8  6B67               	clrf	103,b	;volatile
  1282                           
  1283                           ;Bootloader.c: 172:     PMD5 = 0x00;
  1284  0003AA  6B68               	clrf	104,b	;volatile
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;Bootloader.c: 177:     LATA = 0x20;
  1288  0003AC  0E20               	movlw	32
  1289  0003AE  6EBE               	movwf	190,c	;volatile
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;Bootloader.c: 178:     LATB = 0x00;
  1293  0003B0  6ABF               	clrf	191,c	;volatile
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;Bootloader.c: 179:     LATC = 0x00;
  1297  0003B2  6AC0               	clrf	192,c	;volatile
  1298                           
  1299                           ;Bootloader.c: 184:     TRISA = 0x1F;
  1300  0003B4  0E1F               	movlw	31
  1301  0003B6  6EC6               	movwf	198,c	;volatile
  1302                           
  1303                           ;Bootloader.c: 185:     TRISB = 0x20;
  1304  0003B8  0E20               	movlw	32
  1305  0003BA  6EC7               	movwf	199,c	;volatile
  1306                           
  1307                           ;Bootloader.c: 186:     TRISC = 0xFD;
  1308  0003BC  0EFD               	movlw	253
  1309  0003BE  6EC8               	movwf	200,c	;volatile
  1310                           
  1311                           ;Bootloader.c: 191:     ANSELC = 0xE0;
  1312  0003C0  0EE0               	movlw	224
  1313  0003C2  0104               	movlb	4	; () banked
  1314  0003C4  6F10               	movwf	16,b	;volatile
  1315                           
  1316                           ;Bootloader.c: 192:     ANSELB = 0x20;
  1317  0003C6  0E20               	movlw	32
  1318  0003C8  6F08               	movwf	8,b	;volatile
  1319                           
  1320                           ;Bootloader.c: 193:     ANSELA = 0x13;
  1321  0003CA  0E13               	movlw	19
  1322  0003CC  6F00               	movwf	0,b	;volatile
  1323                           
  1324                           ; BSR set to: 4
  1325                           ;Bootloader.c: 198:     WPUB = 0x00;
  1326  0003CE  6B09               	clrf	9,b	;volatile
  1327                           
  1328                           ; BSR set to: 4
  1329                           ;Bootloader.c: 199:     WPUA = 0x00;
  1330  0003D0  6B01               	clrf	1,b	;volatile
  1331                           
  1332                           ;Bootloader.c: 200:     WPUC = 0x18;
  1333  0003D2  0E18               	movlw	24
  1334  0003D4  6F11               	movwf	17,b	;volatile
  1335                           
  1336                           ; BSR set to: 4
  1337                           ;Bootloader.c: 205:     ODCONA = 0x00;
  1338  0003D6  6B02               	clrf	2,b	;volatile
  1339                           
  1340                           ;Bootloader.c: 206:     ODCONB = 0x50;
  1341  0003D8  0E50               	movlw	80
  1342  0003DA  6F0A               	movwf	10,b	;volatile
  1343                           
  1344                           ; BSR set to: 4
  1345                           ;Bootloader.c: 207:     ODCONC = 0x00;
  1346  0003DC  6B12               	clrf	18,b	;volatile
  1347                           
  1348                           ;Bootloader.c: 212:     SLRCONA = 0x37;
  1349  0003DE  0E37               	movlw	55
  1350  0003E0  6F03               	movwf	3,b	;volatile
  1351                           
  1352                           ;Bootloader.c: 213:     SLRCONB = 0xF0;
  1353  0003E2  0EF0               	movlw	240
  1354  0003E4  6F0B               	movwf	11,b	;volatile
  1355                           
  1356                           ; BSR set to: 4
  1357                           ;Bootloader.c: 214:     SLRCONC = 0xFF;
  1358  0003E6  6913               	setf	19,b	;volatile
  1359                           
  1360                           ;Bootloader.c: 219:     INLVLA = 0x3F;
  1361  0003E8  0E3F               	movlw	63
  1362  0003EA  6F04               	movwf	4,b	;volatile
  1363                           
  1364                           ;Bootloader.c: 220:     INLVLB = 0xF0;
  1365  0003EC  0EF0               	movlw	240
  1366  0003EE  6F0C               	movwf	12,b	;volatile
  1367                           
  1368                           ; BSR set to: 4
  1369                           ;Bootloader.c: 221:     INLVLC = 0xFF;
  1370  0003F0  6914               	setf	20,b	;volatile
  1371                           
  1372                           ;Bootloader.c: 223:     I2C1SDAPPS = 0x0C;
  1373  0003F2  0E0C               	movlw	12
  1374  0003F4  0102               	movlb	2	; () banked
  1375  0003F6  6F70               	movwf	112,b	;volatile
  1376                           
  1377                           ;Bootloader.c: 224:     RB6PPS = 0x21;
  1378  0003F8  0E21               	movlw	33
  1379  0003FA  6F0F               	movwf	15,b	;volatile
  1380                           
  1381                           ;Bootloader.c: 225:     RB4PPS = 0x22;
  1382  0003FC  0E22               	movlw	34
  1383  0003FE  6F0D               	movwf	13,b	;volatile
  1384                           
  1385                           ;Bootloader.c: 226:     I2C1SCLPPS = 0x0E;
  1386  000400  0E0E               	movlw	14
  1387  000402  6F71               	movwf	113,b	;volatile
  1388                           
  1389                           ;Bootloader.c: 229:     OSCCON1 = 0x60;
  1390  000404  0E60               	movlw	96
  1391  000406  0100               	movlb	0	; () banked
  1392  000408  6FAD               	movwf	173,b	;volatile
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;Bootloader.c: 231:     OSCCON3 = 0x00;
  1396  00040A  6BAF               	clrf	175,b	;volatile
  1397                           
  1398                           ;Bootloader.c: 233:     OSCEN = 0x01;
  1399  00040C  0E01               	movlw	1
  1400  00040E  6FB3               	movwf	179,b	;volatile
  1401                           
  1402                           ;Bootloader.c: 236:     OSCFRQ = 0x05;
  1403  000410  0E05               	movlw	5
  1404  000412  6FB1               	movwf	177,b	;volatile
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;Bootloader.c: 239:     OSCTUNE = 0x00;
  1408  000414  6BB0               	clrf	176,b	;volatile
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;Bootloader.c: 241:     ACTCON = 0x00;
  1412  000416  6BAC               	clrf	172,b	;volatile
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;Bootloader.c: 243:     LATC1 = 0;
  1416  000418  92C0               	bcf	1216,1,c	;volatile
  1417                           
  1418                           ; BSR set to: 0
  1419  00041A  0012               	return		;funcret
  1420  00041C                     __end_of_Initialize:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _I2C_Slave_Init *****************
  1424 ;; Defined at:
  1425 ;;		line 60 in file "pksa.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2
  1434 ;; Tracked objects:
  1435 ;;		On entry : 3F/0
  1436 ;;		On exit  : 3F/2
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text7
  1453  000280                     __ptext7:
  1454                           	callstack 0
  1455  000280                     _I2C_Slave_Init:
  1456                           	callstack 127
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;pksa.c: 63:     I2C1CON0 = 0x01;
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;incstack = 0
  1463  000280  0E01               	movlw	1
  1464  000282  0102               	movlb	2	; () banked
  1465  000284  6F94               	movwf	148,b	;volatile
  1466                           
  1467                           ; BSR set to: 2
  1468                           ;pksa.c: 65:     I2C1CON1 = 0x00;
  1469  000286  6B95               	clrf	149,b	;volatile
  1470                           
  1471                           ; BSR set to: 2
  1472                           ;pksa.c: 67:     I2C1CON2 = 0x00;
  1473  000288  6B96               	clrf	150,b	;volatile
  1474                           
  1475                           ; BSR set to: 2
  1476                           ;pksa.c: 69:     I2C1CNTL = 0x00;
  1477  00028A  6B8C               	clrf	140,b	;volatile
  1478                           
  1479                           ; BSR set to: 2
  1480                           ;pksa.c: 70:     I2C1CNTH = 0x00;
  1481  00028C  6B8D               	clrf	141,b	;volatile
  1482                           
  1483                           ;pksa.c: 72:     I2C1ADR0 = (uint8_t) (0x18 << 1);
  1484  00028E  0E30               	movlw	48
  1485  000290  6F90               	movwf	144,b	;volatile
  1486                           
  1487                           ;pksa.c: 73:     I2C1ADR2 = (uint8_t) (0x18 << 1);
  1488  000292  6F92               	movwf	146,b	;volatile
  1489                           
  1490                           ;pksa.c: 75:     I2C1ADR1 = (uint8_t) (127 << 1);
  1491  000294  0EFE               	movlw	254
  1492  000296  6F91               	movwf	145,b	;volatile
  1493                           
  1494                           ;pksa.c: 76:     I2C1ADR3 = (uint8_t) (127 << 1);
  1495  000298  6F93               	movwf	147,b	;volatile
  1496                           
  1497                           ; BSR set to: 2
  1498                           ;pksa.c: 78:     PIE7bits.I2C1IE = 1;
  1499  00029A  84AF               	bsf	175,2,c	;volatile
  1500                           
  1501                           ; BSR set to: 2
  1502                           ;pksa.c: 79:     I2C1PIEbits.PCIE = 1;
  1503  00029C  859B               	bsf	155,2,b	;volatile
  1504                           
  1505                           ; BSR set to: 2
  1506                           ;pksa.c: 80:     I2C1ERRbits.NACKIE = 1;
  1507  00029E  8197               	bsf	151,0,b	;volatile
  1508                           
  1509                           ; BSR set to: 2
  1510                           ;pksa.c: 81:     I2C1PIEbits.ACKTIE = 1;
  1511  0002A0  8D9B               	bsf	155,6,b	;volatile
  1512                           
  1513                           ; BSR set to: 2
  1514                           ;pksa.c: 83:     PIR7bits.I2C1IF = 0;
  1515                           
  1516                           ; BSR set to: 2
  1517                           ;pksa.c: 84:     PIR7bits.I2C1EIF = 0;
  1518                           
  1519                           ; BSR set to: 2
  1520                           ;pksa.c: 85:     PIR7bits.I2C1RXIF = 0;
  1521                           
  1522                           ; BSR set to: 2
  1523                           ;pksa.c: 86:     PIR7bits.I2C1TXIF = 0;
  1524  0002A2  ECF9  F002         	call	PL6	;call to abstracted procedure
  1525                           
  1526                           ; BSR set to: 2
  1527                           ;pksa.c: 87:     I2C1PIR = 0;
  1528  0002A6  6B9A               	clrf	154,b	;volatile
  1529                           
  1530                           ; BSR set to: 2
  1531                           ;pksa.c: 89:     I2C1CON0bits.EN = 1;
  1532  0002A8  8F94               	bsf	148,7,b	;volatile
  1533                           
  1534                           ; BSR set to: 2
  1535  0002AA  0012               	return		;funcret
  1536  0002AC                     __end_of_I2C_Slave_Init:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _DELAY_milliseconds *****************
  1540 ;; Defined at:
  1541 ;;		line 38 in file "delay.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  milliseconds    2    0[COMRAM] unsigned short 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 3F/2
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1558 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1559 ;;Total ram usage:        3 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text8
  1569  00023C                     __ptext8:
  1570                           	callstack 0
  1571  00023C                     _DELAY_milliseconds:
  1572                           	callstack 127
  1573                           
  1574                           ; BSR set to: 2
  1575                           ;delay.c: 39:     while(milliseconds--){
  1576                           
  1577                           ; BSR set to: 2
  1578                           ;incstack = 0
  1579  00023C  D008               	goto	l1339
  1580  00023E                     l1337:
  1581                           
  1582                           ;delay.c: 40:         _delay((unsigned long)((1)*(16000000/4000.0)));
  1583  00023E  0E06               	movlw	6
  1584  000240  6E03               	movwf	??_DELAY_milliseconds^(0+1280),c
  1585  000242  0E30               	movlw	48
  1586  000244                     u607:
  1587  000244  2EE8               	decfsz	wreg,f,c
  1588  000246  D7FE               	bra	u607
  1589  000248  2E03               	decfsz	??_DELAY_milliseconds^(0+1280),f,c
  1590  00024A  D7FC               	bra	u607
  1591  00024C  D000               	nop2	
  1592  00024E                     l1339:
  1593                           
  1594                           ;delay.c: 39:     while(milliseconds--){
  1595  00024E  0601               	decf	DELAY_milliseconds@milliseconds^(0+1280),f,c
  1596  000250  A0D8               	btfss	status,0,c
  1597  000252  0602               	decf	(DELAY_milliseconds@milliseconds+1)^(0+1280),f,c
  1598  000254  2801               	incf	DELAY_milliseconds@milliseconds^(0+1280),w,c
  1599  000256  E1F3               	bnz	l1337
  1600  000258  2802               	incf	(DELAY_milliseconds@milliseconds+1)^(0+1280),w,c
  1601  00025A  E1F1               	bnz	l1337
  1602  00025C  0012               	return		;funcret
  1603  00025E                     __end_of_DELAY_milliseconds:
  1604                           	callstack 0
  1605  0000                     
  1606                           	psect	rparam
  1607  0000                     
  1608                           	psect	idloc
  1609                           
  1610                           ;Config register IDLOC0 @ 0x200000
  1611                           ;	unspecified, using default values
  1612  200000                     	org	2097152
  1613  200000  0FFF               	dw	4095
  1614                           
  1615                           ;Config register IDLOC1 @ 0x200002
  1616                           ;	unspecified, using default values
  1617  200002                     	org	2097154
  1618  200002  0FFF               	dw	4095
  1619                           
  1620                           ;Config register IDLOC2 @ 0x200004
  1621                           ;	unspecified, using default values
  1622  200004                     	org	2097156
  1623  200004  0FFF               	dw	4095
  1624                           
  1625                           ;Config register IDLOC3 @ 0x200006
  1626                           ;	unspecified, using default values
  1627  200006                     	org	2097158
  1628  200006  0FFF               	dw	4095
  1629                           
  1630                           ;Config register IDLOC4 @ 0x200008
  1631                           ;	unspecified, using default values
  1632  200008                     	org	2097160
  1633  200008  0FFF               	dw	4095
  1634                           
  1635                           ;Config register IDLOC5 @ 0x20000A
  1636                           ;	unspecified, using default values
  1637  20000A                     	org	2097162
  1638  20000A  0FFF               	dw	4095
  1639                           
  1640                           ;Config register IDLOC6 @ 0x20000C
  1641                           ;	unspecified, using default values
  1642  20000C                     	org	2097164
  1643  20000C  0FFF               	dw	4095
  1644                           
  1645                           ;Config register IDLOC7 @ 0x20000E
  1646                           ;	unspecified, using default values
  1647  20000E                     	org	2097166
  1648  20000E  0FFF               	dw	4095
  1649                           
  1650                           ;Config register IDLOC8 @ 0x200010
  1651                           ;	unspecified, using default values
  1652  200010                     	org	2097168
  1653  200010  0FFF               	dw	4095
  1654                           
  1655                           ;Config register IDLOC9 @ 0x200012
  1656                           ;	unspecified, using default values
  1657  200012                     	org	2097170
  1658  200012  0FFF               	dw	4095
  1659                           
  1660                           ;Config register IDLOC10 @ 0x200014
  1661                           ;	unspecified, using default values
  1662  200014                     	org	2097172
  1663  200014  0FFF               	dw	4095
  1664                           
  1665                           ;Config register IDLOC11 @ 0x200016
  1666                           ;	unspecified, using default values
  1667  200016                     	org	2097174
  1668  200016  0FFF               	dw	4095
  1669                           
  1670                           ;Config register IDLOC12 @ 0x200018
  1671                           ;	unspecified, using default values
  1672  200018                     	org	2097176
  1673  200018  0FFF               	dw	4095
  1674                           
  1675                           ;Config register IDLOC13 @ 0x20001A
  1676                           ;	unspecified, using default values
  1677  20001A                     	org	2097178
  1678  20001A  0FFF               	dw	4095
  1679                           
  1680                           ;Config register IDLOC14 @ 0x20001C
  1681                           ;	unspecified, using default values
  1682  20001C                     	org	2097180
  1683  20001C  0FFF               	dw	4095
  1684                           
  1685                           ;Config register IDLOC15 @ 0x20001E
  1686                           ;	unspecified, using default values
  1687  20001E                     	org	2097182
  1688  20001E  0FFF               	dw	4095
  1689                           
  1690                           	psect	config
  1691                           
  1692                           ;Config register CONFIG1 @ 0x300000
  1693                           ;	External Oscillator Selection
  1694                           ;	FEXTOSC = OFF, Oscillator not enabled
  1695                           ;	Reset Oscillator Selection
  1696                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  1697  300000                     	org	3145728
  1698  300000  EC                 	db	236
  1699                           
  1700                           ;Config register CONFIG2 @ 0x300001
  1701                           ;	Clock out Enable bit
  1702                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1703                           ;	PRLOCKED One-Way Set Enable bit
  1704                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1705                           ;	Clock Switch Enable bit
  1706                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1707                           ;	Fail-Safe Clock Monitor Enable bit
  1708                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1709                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  1710                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  1711                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  1712                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  1713  300001                     	org	3145729
  1714  300001  FF                 	db	255
  1715                           
  1716                           ;Config register CONFIG3 @ 0x300002
  1717                           ;	MCLR Enable bit
  1718                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1719                           ;	Power-up timer selection bits
  1720                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1721                           ;	Multi-vector enable bit
  1722                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1723                           ;	IVTLOCK bit One-way set enable bit
  1724                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1725                           ;	Low Power BOR Enable bit
  1726                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1727                           ;	Brown-out Reset Enable bits
  1728                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1729  300002                     	org	3145730
  1730  300002  FF                 	db	255
  1731                           
  1732                           ;Config register CONFIG4 @ 0x300003
  1733                           ;	Brown-out Reset Voltage Selection bits
  1734                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1735                           ;	ZCD Disable bit
  1736                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1737                           ;	PPSLOCK bit One-Way Set Enable bit
  1738                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1739                           ;	Stack Full/Underflow Reset Enable bit
  1740                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1741                           ;	Low Voltage Programming Enable bit
  1742                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1743                           ;	Extended Instruction Set Enable bit
  1744                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1745  300003                     	org	3145731
  1746  300003  FF                 	db	255
  1747                           
  1748                           ;Config register CONFIG5 @ 0x300004
  1749                           ;	WDT Period selection bits
  1750                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1751                           ;	WDT operating mode
  1752                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1753  300004                     	org	3145732
  1754  300004  9F                 	db	159
  1755                           
  1756                           ;Config register CONFIG6 @ 0x300005
  1757                           ;	WDT Window Select bits
  1758                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1759                           ;	WDT input clock selector
  1760                           ;	WDTCCS = SC, Software Control
  1761  300005                     	org	3145733
  1762  300005  FF                 	db	255
  1763                           
  1764                           ;Config register CONFIG7 @ 0x300006
  1765                           ;	Boot Block Size selection bits
  1766                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1767                           ;	Boot Block enable bit
  1768                           ;	BBEN = OFF, Boot block disabled
  1769                           ;	Storage Area Flash enable bit
  1770                           ;	SAFEN = OFF, SAF disabled
  1771                           ;	Background Debugger
  1772                           ;	DEBUG = OFF, Background Debugger disabled
  1773  300006                     	org	3145734
  1774  300006  FF                 	db	255
  1775                           
  1776                           ;Config register CONFIG8 @ 0x300007
  1777                           ;	Boot Block Write Protection bit
  1778                           ;	WRTB = OFF, Boot Block not Write protected
  1779                           ;	Configuration Register Write Protection bit
  1780                           ;	WRTC = OFF, Configuration registers not Write protected
  1781                           ;	Data EEPROM Write Protection bit
  1782                           ;	WRTD = OFF, Data EEPROM not Write protected
  1783                           ;	SAF Write protection bit
  1784                           ;	WRTSAF = OFF, SAF not Write Protected
  1785                           ;	Application Block write protection bit
  1786                           ;	WRTAPP = OFF, Application Block not write protected
  1787  300007                     	org	3145735
  1788  300007  FF                 	db	255
  1789                           
  1790                           ;Config register CONFIG9 @ 0x300008
  1791                           ;	PFM and Data EEPROM Code Protection bit
  1792                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1793  300008                     	org	3145736
  1794  300008  FF                 	db	255
  1795                           
  1796                           ; Padding undefined space
  1797  300009                     	org	3145737
  1798  300009  FF                 	db	255
  1799                           tosu	equ	0x4FF
  1800                           tosh	equ	0x4FE
  1801                           tosl	equ	0x4FD
  1802                           stkptr	equ	0x4FC
  1803                           pclatu	equ	0x4FB
  1804                           pclath	equ	0x4FA
  1805                           pcl	equ	0x4F9
  1806                           tblptru	equ	0x4F8
  1807                           tblptrh	equ	0x4F7
  1808                           tblptrl	equ	0x4F6
  1809                           tablat	equ	0x4F5
  1810                           prodh	equ	0x4F4
  1811                           prodl	equ	0x4F3
  1812                           indf0	equ	0x4EF
  1813                           postinc0	equ	0x4EE
  1814                           postdec0	equ	0x4ED
  1815                           preinc0	equ	0x4EC
  1816                           plusw0	equ	0x4EB
  1817                           fsr0h	equ	0x4EA
  1818                           fsr0l	equ	0x4E9
  1819                           wreg	equ	0x4E8
  1820                           indf1	equ	0x4E7
  1821                           postinc1	equ	0x4E6
  1822                           postdec1	equ	0x4E5
  1823                           preinc1	equ	0x4E4
  1824                           plusw1	equ	0x4E3
  1825                           fsr1h	equ	0x4E2
  1826                           fsr1l	equ	0x4E1
  1827                           bsr	equ	0x4E0
  1828                           indf2	equ	0x4DF
  1829                           postinc2	equ	0x4DE
  1830                           postdec2	equ	0x4DD
  1831                           preinc2	equ	0x4DC
  1832                           plusw2	equ	0x4DB
  1833                           fsr2h	equ	0x4DA
  1834                           fsr2l	equ	0x4D9
  1835                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      21
    BANK5           160      0     128
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          254      0       0

Pointer List with Targets:

    flash_memory_write@data	PTR unsigned char  size(2) Largest target is 128
		 -> flash_buffer(BANK5[128]), 


Critical Paths under _main in COMRAM

    _main->_do_i2c_tasks
    _do_i2c_tasks->_flash_memory_write

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1326
                 _DELAY_milliseconds
                     _I2C_Slave_Init
                         _Initialize
                       _do_i2c_tasks
                  _flash_memory_read
 ---------------------------------------------------------------------------------
 (1) _do_i2c_tasks                                         8     8      0     985
                                              7 COMRAM     8     8      0
                         __WriteData
                 _flash_memory_erase
                  _flash_memory_read
                 _flash_memory_write
 ---------------------------------------------------------------------------------
 (2) _flash_memory_write                                   7     3      4     331
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _flash_memory_read                                    6     4      2     243
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _flash_memory_erase                                   4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) __WriteData                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DELAY_milliseconds                                   3     1      2      98
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_milliseconds
   _I2C_Slave_Init
   _Initialize
   _do_i2c_tasks
     __WriteData
     _flash_memory_erase
     _flash_memory_read
     _flash_memory_write
   _flash_memory_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            FFF      0       0      40        0.0%
EEDATA             200      0       0       0        0.0%
BITBANK20          100      0       0      35        0.0%
BANK20             100      0       0      36        0.0%
BITBANK19          100      0       0      33        0.0%
BANK19             100      0       0      34        0.0%
BITBANK18          100      0       0      31        0.0%
BANK18             100      0       0      32        0.0%
BITBANK17          100      0       0      29        0.0%
BANK17             100      0       0      30        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BIGRAMh             FE      0       0      39        0.0%
BITBANK21           FE      0       0      37        0.0%
BANK21              FE      0       0      38        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      15       1       22.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      28        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 01 17:36:19 2021

                              PL2 05E4                                PL4 02FC  
                              PL6 05F2                               l210 04B2  
                             l220 057E                               l190 0448  
                             l267 02F2                               l188 0434  
                             l197 0454                               l189 05D6  
                             l199 045C                               l969 022C  
                             u460 04AE                               u607 0244  
      __end_of_DELAY_milliseconds 025E              __end_of_do_i2c_tasks 05E4  
                             wreg 0004E8                              l1313 034E  
                            l1403 04C0                              l1413 04CE  
                            l1501 0334                              l1337 023E  
                            l1441 0546                              l1433 052C  
                            l1361 0450                              l1353 0444  
                            l1339 024E                              l1375 0474  
                            l1465 0590                              l1449 056C  
                            l1385 048C                              l1481 05B4  
                            l1469 059A                              l1389 0494  
                            _LATA 0004BE                              _LATB 0004BF  
                            _LATC 0004C0                              _PMD0 000063  
                            _PMD1 000064                              _PMD2 000065  
                            _PMD3 000066                              _PMD4 000067  
                            _PMD5 000068                              _WPUA 000401  
                            _WPUB 000409                              _WPUC 000411  
                            _main 0308                              indf2 0004DF  
                            fsr2l 0004D9                              start 05FC  
                    ___param_bank 000000                             ?_main 0501  
                           _LATC1 002601                             _OSCEN 0000B3  
                           _TRISA 0004C6                             _TRISB 0004C7  
                           _TRISC 0004C8                             status 0004D8  
flash_memory_erase@blockStartAddr 0503                   __initialization 025E  
                    __end_of_main 033A                        _Initialize 039E  
                          ??_main 0510                     __activetblptr 000002  
              _flash_memory_erase 02D8                _flash_memory_write 033A  
                          _ACTCON 0000AC                            _ANSELA 000400  
                          _ANSELB 000408                            _ANSELC 000410  
             ?_flash_memory_erase 0501         flash_memory_erase@address 0501  
                          _RB4PPS 00020D                            _RB6PPS 00020F  
                          _ODCONA 000402                            _ODCONB 00040A  
                          _ODCONC 000412                            _INLVLA 000404  
                          _INLVLB 00040C                            _INLVLC 000414  
                          _TABLAT 0004F5               ?_flash_memory_write 0501  
                          _OSCFRQ 0000B1              ??_flash_memory_erase 0503  
                          clear_0 0264              ??_flash_memory_write 0505  
           __size_of_do_i2c_tasks 01C8                            isa$std 000001  
                          tblptru 0004F8                        __WriteData 022A  
                      __accesstop 0560           __end_of__initialization 0276  
                   ___rparam_used 000001                      _do_i2c_tasks 041C  
                  __pcstackCOMRAM 0501           __size_of_I2C_Slave_Init 002C  
                     ?_Initialize 0501                        __end_ofPL2 05F2  
                      __end_ofPL4 0308                        __end_ofPL6 05FC  
                 do_i2c_tasks@dat 050C                   do_i2c_tasks@idx 050E  
                      __pbssBANK5 0560                _DELAY_milliseconds 023C  
                   do_i2c_tasks@i 050A               ?_DELAY_milliseconds 0501  
                         _I2C1PIR 00029A                           _I2C1RXB 00028A  
                         _I2C1TXB 00028B              ??_DELAY_milliseconds 0503  
                         _OSCCON1 0000AD                           _OSCCON3 0000AF  
                         _TBLPTRH 0004F7                           _TBLPTRL 0004F6  
                         _TBLPTRU 0004F8                           _NVMADRH 000044  
                         _NVMADRL 000043                           _NVMADRU 000045  
                         _NVMDATH 000047                           _OSCTUNE 0000B0  
                         _NVMDATL 000046                           _NVMCON1 000041  
                         _NVMLOCK 000042                           _SLRCONA 000403  
                         _SLRCONB 00040B                           _SLRCONC 000413  
                     ?__WriteData 0501               __size_of_Initialize 007E  
                         __Hparam 0000                           __Lparam 0000  
                         __pcinit 025E                           __ramtop 1600  
                         __ptext0 0308                           __ptext1 041C  
                         __ptext2 033A                           __ptext3 02AC  
                         __ptext4 02D8                           __ptext5 022A  
                         __ptext6 039E                           __ptext7 0280  
                         __ptext8 023C                       _I2C1ERRbits 000297  
                     _I2C1PIEbits 00029B                       _I2C1PIRbits 00029A  
            end_of_initialization 0276                      _flash_buffer 0560  
                   __Lmediumconst 0000                        _pksa_index 0514  
      flash_memory_read@readWordH 0506        flash_memory_read@readWordL 0505  
                  _I2C_Slave_Init 0280                           postinc0 0004EE  
             __size_of__WriteData 0012            __end_of_I2C_Slave_Init 02AC  
       flash_memory_write@address 0501                      ??_Initialize 0501  
     __size_of_flash_memory_erase 0024       __size_of_flash_memory_write 0064  
             start_initialization 025E                 _flash_memory_read 02AC  
              __end_of_Initialize 041C                ?_flash_memory_read 0501  
                 ?_I2C_Slave_Init 0501               ??_flash_memory_read 0503  
                do_i2c_tasks@temp 050F            flash_memory_write@data 0503  
                     __pbssCOMRAM 0510                _flash_addr_pointer 0510  
       __end_of_flash_memory_read 02D8                      ??__WriteData 0501  
                        _I2C1ADB0 00028E                          _I2C1ADR0 000290  
                        _I2C1ADR1 000291                          _I2C1ADR2 000292  
                        _I2C1ADR3 000293                          _I2C1CON0 000294  
                        _I2C1CON1 000295                          _I2C1CON2 000296  
                        _I2C1CNTH 00028D                          _I2C1CNTL 00028C  
                       _bufferRAM 001500                __end_of__WriteData 023C  
     __size_of_DELAY_milliseconds 0022                        _I2C1SDAPPS 000270  
                      _I2C1SCLPPS 000271                          _PIE7bits 0004AF  
                   _I2C1STAT0bits 000298                     _I2C1STAT1bits 000299  
                        _PIR7bits 0004BA    DELAY_milliseconds@milliseconds 0501  
      __size_of_flash_memory_read 002C                       _INTCON0bits 0004D6  
                 __WriteData@data 0501                     ?_do_i2c_tasks 0501  
                        __Hrparam 0000                          __Lrparam 0000  
                 _pksa_wd_address 0515             flash_memory_write@wdi 0507  
                    _I2C1CON0bits 000294                  ??_I2C_Slave_Init 0501  
                   __size_of_main 0032                    ??_do_i2c_tasks 0508  
      __end_of_flash_memory_erase 02FC                          isa$xinst 000000  
      __end_of_flash_memory_write 039E                       _NVMCON0bits 000040  
                     _NVMCON1bits 000041          flash_memory_read@address 0501  
                     _pksa_status 0513                     _i2cSlaveState 0512  
